@using Microsoft.AspNetCore.SignalR.Client;
@using Thiccdal.Shared.Notifications;

@inject NavigationManager Navigation
<MudCard>
    <MudCardHeader>RawDataView</MudCardHeader>
    <MudCardContent>
        @foreach (var message in Messages)
        {
            <div class="rawMessage row">
                <div class="col-1 time">@message.DateTime.ToLongTimeString()</div>
                <div class="col-1 sender">@message.Context</div>
                <div class="col-10 message">@message.Data</div>
            </div>
        }
    </MudCardContent>
</MudCard>

@code {
    HubConnection hubConnection = new HubConnectionBuilder()
    .WithUrl("http://localhost:1234/hub")
    .Build();

    List<RawData> Messages = new List<RawData>();

    protected override async Task OnInitializedAsync()
    {


        await hubConnection.StartAsync();

        hubConnection.On<RawData>(nameof(RawData), AddRawDataToView);

        LogStart();
        await base.OnInitializedAsync();
    }

    private void LogStart()
    {
        AddRawDataToView(new RawData("Local", DateTime.Now, $"Connected to hub. State is {hubConnection.State}"));
    }

    private void AddRawDataToView(RawData newRawData)
    {
        lock (Messages)
        {
            if (Messages.Count > 20)
            {
                // Remove oldest(last)
                Messages.RemoveAt(20);
            }
            Messages.Insert(0, newRawData);

            InvokeAsync(() => StateHasChanged());
        }
    }
}
